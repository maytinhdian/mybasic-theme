@use "./colors" as theme-color;
@use "sass:map";
@use "sass:math";

$default-theme: theme-color.$theme-color-light !default;
//Function lấy màu theo key
@function theme-color($key) {
  @return map.get($default-theme, $key);
}

/// @function fluid($min, $max, $min-vw: 320px, $max-vw: 1200px)
/// Trả về biểu thức clamp(min, giá trị fluid mượt theo viewport, max)
@function fluid($min, $max, $min-vw, $max-vw: 1200px) {
  // Khoảng cách giá trị (unitless, tính theo rem)
  $delta: math.div($max - $min, 1rem);
  @debug "$delta: #{$delta}";

  // Khoảng cách viewport (unitless, tính theo px)
  $range: math.div($max-vw - $min-vw, 1px);
  @debug "$range: #{$range}";

  // Biểu thức fluid: min + delta * ((100vw - min-vw) / range)
  $fluid-calc: calc(#{$min} + #{$delta} * ((100vw - #{$min-vw}) / #{$range}));

  @return clamp($min, $fluid-calc, $max);
}

/// @mixin responsive-font-size($min, $max, $min-vw: 320px, $max-vw: 1200px)
/// Đặt font-size chạy fluid giữa min→max theo viewport
@mixin responsive-font-size($min, $max, $min-vw: 320px, $max-vw: 1200px) {
  font-size: fluid($min, $max, $min-vw, $max-vw);
}

/// @mixin maxwidth($max: 1200px, $padding: 1rem)
/// Thiết lập width 100%, max-width, canh giữa và padding ngang
@mixin maxwidth($max: 1200px, $padding: 1rem) {
  width: 100%;
  max-width: $max;
  margin-left: auto;
  margin-right: auto;
  padding-left: $padding;
  padding-right: $padding;
}


@function fluid-space($min, $max, $min-vw: 320px, $max-vw: 1920px) {
  // Loại đơn vị ra để tính toán (unitless)
  $min-num: math.div($min, 1rem); // giả định bạn dùng rem
  $max-num: math.div($max, 1rem);
  $min-vw-num: math.div($min-vw, 1px);
  $max-vw-num: math.div($max-vw, 1px);

  // Hệ số góc và intercept (unitless)
  $slope: ($max-num - $min-num) / ($max-vw-num - $min-vw-num) * 100;
  $intercept: $min-num - ($slope * $min-vw-num / 100);

  // Trả về chuỗi clamp với đơn vị rem + vw
  @return clamp(#{$min}, #{($intercept)}rem + #{$slope}vw, #{$max});
}


